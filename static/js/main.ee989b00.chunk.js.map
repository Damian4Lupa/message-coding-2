{"version":3,"sources":["img/logo.png","components/Header.jsx","assets/Messages.js","components/Password.jsx","components/Message.jsx","components/Email.jsx","components/Checkbox.jsx","components/EncryptionButton.jsx","components/DecryptionButton.jsx","components/ResetButton.jsx","components/SendButton.jsx","components/Footer.jsx","components/CodingHook.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","width","height","Messages","errorPasswordTooShort","errorPasswordTooLong","errorMessageTooShort","errorMessageTooLong","errorMessageNotCoded","errorEmailIsInvalid","errorcheckbox","messageSend","Password","_ref","updatePassword","updatePasswordValidation","showValidationErrors","resetAll","_useState","useState","_useState2","Object","slicedToArray","localPassword","setlocalPassword","_useState3","_useState4","localPasswordValidation","setlocalPasswordValidation","_useState5","_useState6","setErrorPasswordTooShort","_useState7","_useState8","setErrorPasswordTooLong","passwordStyle","passwordErrorTooShort","messages","passwordErrorTooLong","useEffect","checkPassword","length","PasswordTooLong","checkPasswordValidation","handlePasswordValidation","htmlFor","id","type","value","onChange","event","target","required","Message","updateMessage","updateMessageValidation","message","localMessage","setLocalMessage","localMessageValidation","setlocalMessageValidation","setErrorMessageTooShort","setErrorMessageTooLong","messageStyle","messageErrorTooShort","messageErrorTooLong","messageErrorNotCoded","checkErrorMessageTooShort","checkErrorMessageTooLong","checkMessageValidation","handleMessageValidation","rows","Email","updateEmail","updateEmailValidation","decryptionClicked","localEmail","setLocalEmail","localEmailValidation","setLocalEmailValidation","setErrorEmailIsInvalid","emailStyle","emailIsInvalid","checkEmailValidation","checkErrorEmailIsInvalid","indexOf","handleEmailValidation","placeholder","Checkbox","updateCheckbox","showMessageWasSent","allValidation","localCheckbox","setlocalCheckbox","localErrorcheckbox","setlocalErrorcheckbox","checkboxError","emailFeedbackStyle","Fragment","checked","EncryptionButton","encryptionClicked","handleEncryption","disabled","onClick","DecryptionButton","handleDecryption","ResetButton","handleReset","resetButtonVisible","SendButton","handleSend","Footer","footerStyle","href","Coding","password","setPassword","setMessage","email","setEmail","checkbox","setCheckbox","_useState9","_useState10","setEncryptionClicked","_useState11","_useState12","setDecryptionClicked","_useState13","_useState14","passwordValidation","setPasswordValidation","_useState15","_useState16","messageValidation","setMessageValidation","_useState17","_useState18","emailValidation","setEmailValidation","_useState19","_useState20","codingValidation","setCodingValidation","_useState21","_useState22","setAllValidation","_useState23","_useState24","setShowValidationErrors","_useState25","_useState26","setErrorMessageNotCoded","_useState27","_useState28","setErrorcheckbox","_useState29","_useState30","setShowMessageWasSent","_useState31","_useState32","setresetAll","_useState33","_useState34","setResetButtonVisible","handleEncryptionClickStatus","handleDecryptionClickStatus","codeMessage","key","toUpperCase","replace","imput","String","fromCharCode","charCodeAt","decodeMessage","codeToMessage","noCodeMessage","output","i","c","match","code","handleShowValidationErrors","checksetCodingValidation","checksetErrorMessageNotCoded","handleCodingValidation","setTimeout","noValidate","components_Password","components_Message","components_EncryptionButton","components_DecryptionButton","components_ResetButton","components_Email","components_SendButton","preventDefault","checkShowMessageWasSent","toSend","send_to","send","then","response","console","log","status","text","catch","err","components_Checkbox","components_Footer","App","components_Header","CodingHook","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0NCkBzBC,EAfA,WACb,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAChBH,EAAAC,EAAAC,cAAA,OACEC,UAAU,uBACVC,IAAKC,IACLC,IAAI,eACJC,MAAM,KACNC,OAAO,OAETR,EAAAC,EAAAC,cAAA,gDCFSO,EAXE,CACfC,sBAAuB,uBACvBC,qBAAsB,sBACtBC,qBAAsB,wBACtBC,oBAAqB,uBACrBC,qBAAsB,4BACtBC,oBAAqB,+BACrBC,cAAe,iBACfC,YAAa,6BC8FAC,EAnGE,SAAAC,GAKX,IAJJC,EAIID,EAJJC,eACAC,EAGIF,EAHJE,yBACAC,EAEIH,EAFJG,qBACAC,EACIJ,EADJI,SACIC,EACsCC,mBAAS,IAD/CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACGK,EADHH,EAAA,GACkBI,EADlBJ,EAAA,GAAAK,EAE0DN,oBAAS,GAFnEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEGE,EAFHD,EAAA,GAE4BE,EAF5BF,EAAA,GAAAG,EAGsDV,oBAAS,GAH/DW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGGzB,EAHH0B,EAAA,GAG0BC,EAH1BD,EAAA,GAAAE,EAIoDb,oBAAS,GAJ7Dc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAIG3B,EAJH4B,EAAA,GAIyBC,EAJzBD,EAAA,GAqCAE,EAAgB,kCAMlBA,EAHCnB,GAAwBZ,GACxBY,GAAwBX,EAET,8CAEA,kCAGlB,IAAI+B,EAAwBpB,GAAwBZ,GAClDV,EAAAC,EAAAC,cAAA,cAASyC,EAASjC,uBAEhBkC,EAAuBtB,GAAwBX,GACjDX,EAAAC,EAAAC,cAAA,cAASyC,EAAShC,sBAgBpB,OAbAkC,oBAAU,YA/CuB,WAC/B,IAAIC,EAAgBjB,EAAckB,OAE9BC,GAAkB,EAClBC,GAA0B,EAS5BD,EADEF,GAAiB,GASnBG,GAHGvC,IAA0BC,EAM/B0B,EAlBIS,EAAgB,GAmBpBN,EAAwBQ,GACxBd,EAA2Be,GAsB3BC,GACA9B,EAAeS,GACfR,EAAyBY,IACxB,CAACJ,IAEJgB,oBAAU,WACRf,EAAiB,IACjBI,GAA2B,GAC3BG,GAAyB,GACzBG,GAAwB,IACvB,CAACjB,IAGFvB,EAAAC,EAAAC,cAAA,WAASC,UAAU,OACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,gBAAgBhD,UAAU,UAAzC,mBAIFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SACEkD,GAAG,gBACHC,KAAK,WACLlD,UAAWsC,EACXa,MAAOzB,EACP0B,SA3EqB,SAACC,GAAD,OAAW1B,EAAiB0B,EAAMC,OAAOH,QA4E9DI,UAAQ,IAEV1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZuC,EACAE,IAGL5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BCQNwD,EAtGC,SAAAxC,GAOV,IANJyC,EAMIzC,EANJyC,cACAC,EAKI1C,EALJ0C,wBACAvC,EAIIH,EAJJG,qBACAR,EAGIK,EAHJL,qBACAgD,EAEI3C,EAFJ2C,QACAvC,EACIJ,EADJI,SACIC,EACoCC,mBAASqC,GAD7CpC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACGuC,EADHrC,EAAA,GACiBsC,EADjBtC,EAAA,GAAAK,EAEwDN,oBAAS,GAFjEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEGkC,EAFHjC,EAAA,GAE2BkC,EAF3BlC,EAAA,GAAAG,EAGoDV,oBAAS,GAH7DW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGGvB,EAHHwB,EAAA,GAGyB+B,EAHzB/B,EAAA,GAAAE,EAIkDb,oBAAS,GAJ3Dc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAIGzB,EAJH0B,EAAA,GAIwB6B,EAJxB7B,EAAA,GAoCA8B,EAAe,kCAOjBA,EAJC/C,GAAwBV,GACxBU,GAAwBT,GACxBS,GAAwBR,EAEV,8CAEA,kCAGjB,IAAIwD,EAAuBhD,GAAwBV,GACjDZ,EAAAC,EAAAC,cAAA,cAASyC,EAAS/B,sBAEhB2D,EAAsBjD,GAAwBT,GAChDb,EAAAC,EAAAC,cAAA,cAASyC,EAAS9B,qBAEhB2D,EAAuBlD,GAAwBR,GACjDd,EAAAC,EAAAC,cAAA,cAASyC,EAAS7B,sBAoBpB,OAjBA+B,oBAAU,YAlDsB,WAC9B,IAAI4B,GAA4B,EAC5BC,GAA2B,EAC3BC,GAAyB,EAG3BF,EADEV,EAAahB,OAAS,EAOxB2B,EADEX,EAAahB,OAAS,GASxB4B,GAHG/D,IAAyBC,EAM9BsD,EAAwBM,GACxBL,EAAuBM,GACvBR,EAA0BS,GA0B1BC,GACAhB,EAAcG,GACdF,EAAwBI,IACvB,CAACF,IAEJlB,oBAAU,WACRmB,EAAgB,IAChBE,GAA0B,GAC1BC,GAAwB,GACxBC,GAAuB,IACtB,CAAC7C,IAEJsB,oBAAU,WACRmB,EAAgBF,IACf,CAACA,IAGF9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,YACEkD,GAAG,eACHjD,UAAWkE,EACXQ,KAAK,IACLvB,MAAOS,EACPR,SA5EsB,SAACC,GAAD,OAAWQ,EAAgBR,EAAMC,OAAOH,QA6E9DI,UAAQ,IAGV1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZmE,EACAC,EACAC,KCvBMM,EAzED,SAAA3D,GAMR,IALJ4D,EAKI5D,EALJ4D,YACAC,EAII7D,EAJJ6D,sBACA1D,EAGIH,EAHJG,qBACAC,EAEIJ,EAFJI,SACA0D,EACI9D,EADJ8D,kBACIzD,EACgCC,mBAAS,IADzCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACG0D,EADHxD,EAAA,GACeyD,EADfzD,EAAA,GAAAK,EAEoDN,oBAAS,GAF7DO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEGqD,EAFHpD,EAAA,GAEyBqD,EAFzBrD,EAAA,GAAAG,EAGkDV,oBAAS,GAH3DW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGGpB,EAHHqB,EAAA,GAGwBkD,EAHxBlD,EAAA,GA2BAmD,EAAa,kCAGfA,GADGN,GAAqB3D,GAAwBP,EACnC,8CAEA,kCAGf,IAAIyE,GAAkBP,GACpB3D,GACAP,GAAuBf,EAAAC,EAAAC,cAAA,cAASyC,EAAS5B,qBAc3C,OAZA8B,oBAAU,YAhCoB,WAC5B,IAAI4C,GAAuB,EACvBC,GAA2B,EAG7BR,EAAWnC,OAAS,IACS,IAA7BmC,EAAWS,QAAQ,OACU,IAA7BT,EAAWS,QAAQ,MAEnBF,GAAuB,EACvBC,GAA2B,IAE3BD,GAAuB,EACvBC,GAA2B,GAG7BL,EAAwBI,GACxBH,EAAuBI,GAgBvBE,GACAb,EAAYG,GACZF,EAAsBI,IACrB,CAACF,EAAYE,IAEhBvC,oBAAU,WACRsC,EAAc,IACdE,GAAwB,GACxBC,GAAuB,IACtB,CAAC/D,IAGFvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SACEkD,GAAG,aACHC,KAAK,QACLlD,UAAWoF,EACXM,YAAY,gCACZvC,MAAO4B,EACP3B,SAtDoB,SAACC,GAAD,OAAW2B,EAAc3B,EAAMC,OAAOH,QAuD1DI,UAAQ,IAEV1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWqF,KCcjBM,EAlFE,SAAA3E,GAOX,IANJ4E,EAMI5E,EANJ4E,eACAzE,EAKIH,EALJG,qBACA0E,EAII7E,EAJJ6E,mBACAC,EAGI9E,EAHJ8E,cACA1E,EAEIJ,EAFJI,SACA0D,EACI9D,EADJ8D,kBACIzD,EACsCC,oBAAS,GAD/CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACG0E,EADHxE,EAAA,GACkByE,EADlBzE,EAAA,GAAAK,EAEgDN,oBAAS,GAFzDO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEGqE,EAFHpE,EAAA,GAEuBqE,EAFvBrE,EAAA,GA2BAsE,GAAiBrB,GAAqB3D,GAAwB8E,GAChEpG,EAAAC,EAAAC,cAAA,cAASyC,EAAS3B,eAEhBC,EAAc+E,GAAsBC,GACtCjG,EAAAC,EAAAC,cAAA,cAASyC,EAAS1B,aAEhBsF,EAAqB,2BAiBzB,OAfEA,EADEP,EACmB,sBAEA,2BAGvBnD,oBAAU,WA3BRwD,GANKH,GAmCLH,EAAeG,IACd,CAACA,IAEJrD,oBAAU,WACRsD,GAAiB,GACjBE,GAAsB,IACrB,CAAC9E,IAGFvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuG,SAAA,KACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEkD,GAAG,WACHC,KAAK,WACLlD,UAAU,mBACVoD,SA3Ca,WAQrB4C,GALID,IAyCIO,QAASP,EACTxC,UAAQ,IAEV1D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBgD,QAAQ,YAA5C,oBAIFnD,EAAAC,EAAAC,cAAA,OAAKC,UAAWoG,GAAqBtF,GACrCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBmG,IAEpCtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BCxDNuG,EAtBU,SAAAvF,GAA6C,IAA1CwF,EAA0CxF,EAA1CwF,kBAAmBC,EAAuBzF,EAAvByF,iBAmB7C,OAlByBD,EACvB3G,EAAAC,EAAAC,cAAA,UACEmD,KAAK,SACLlD,UAAU,oCACV0G,UAAQ,GAHV,cAQA7G,EAAAC,EAAAC,cAAA,UACEmD,KAAK,SACLlD,UAAU,oCACV2G,QAASF,GAHX,eCQWG,EAlBU,SAAA5F,GAA6C,IAA1C8D,EAA0C9D,EAA1C8D,kBAAmB+B,EAAuB7F,EAAvB6F,iBAe7C,OAdyB/B,EACvBjF,EAAAC,EAAAC,cAAA,UAAQmD,KAAK,SAASlD,UAAU,mCAAmC0G,UAAQ,GAA3E,cAIA7G,EAAAC,EAAAC,cAAA,UACEmD,KAAK,SACLlD,UAAU,mCACV2G,QAASE,GAHX,eCgBWC,EAtBK,SAAA9F,GAAuC,IAArC+F,EAAqC/F,EAArC+F,YAmBpB,OAnByD/F,EAAxBgG,mBAE7BnH,EAAAC,EAAAC,cAAA,UACEmD,KAAK,SACLlD,UAAU,oCACV2G,QAASI,GAHX,SAQAlH,EAAAC,EAAAC,cAAA,UACEmD,KAAK,SACLlD,UAAU,oCACV0G,UAAQ,GAHV,UCGSO,EAbI,SAAAjG,GAAoB,IAAjBkG,EAAiBlG,EAAjBkG,WACpB,OACErH,EAAAC,EAAAC,cAAA,UACEC,UAAU,oCACVkD,KAAK,SACLC,MAAM,OACNwD,QAASO,GAJX,SC2BWC,EA7BA,SAAAnG,GAA+D,IAA7D6E,EAA6D7E,EAA7D6E,mBAAoBhF,EAAyCG,EAAzCH,cAAeM,EAA0BH,EAA1BG,qBAC9CiG,EAAc,GAQlB,OALEA,EADEvB,GAAuBhF,GAAiBM,EAC5B,qBAEA,oBAIdtB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+CAChBH,EAAAC,EAAAC,cAAA,KAAGC,UAAWoH,GAAd,oCACAvH,EAAAC,EAAAC,cAAA,OAAKkD,GAAG,qBACNpD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,KAAGsH,KAAK,KAAR,YAEFxH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,KAAGsH,KAAK,KAAR,UAEFxH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,KAAGsH,KAAK,KAAR,gBCmVGC,EA9VA,WAAM,IAAAjG,EACaC,mBAAS,IADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACZkG,EADYhG,EAAA,GACFiG,EADEjG,EAAA,GAAAK,EAEWN,mBAAS,IAFpBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEZ+B,EAFY9B,EAAA,GAEH4F,EAFG5F,EAAA,GAAAG,EAGOV,mBAAS,IAHhBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGZ0F,EAHYzF,EAAA,GAGL0F,EAHK1F,EAAA,GAAAE,EAIab,oBAAS,GAJtBc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAIZyF,EAJYxF,EAAA,GAIFyF,EAJEzF,EAAA,GAAA0F,EAK+BxG,oBAAS,GALxCyG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAKZtB,EALYuB,EAAA,GAKOC,EALPD,EAAA,GAAAE,EAM+B3G,oBAAS,GANxC4G,EAAA1G,OAAAC,EAAA,EAAAD,CAAAyG,EAAA,GAMZnD,EANYoD,EAAA,GAMOC,EANPD,EAAA,GAAAE,EAOiC9G,oBAAS,GAP1C+G,EAAA7G,OAAAC,EAAA,EAAAD,CAAA4G,EAAA,GAOZE,EAPYD,EAAA,GAOQE,EAPRF,EAAA,GAAAG,EAQ+BlH,oBAAS,GARxCmH,EAAAjH,OAAAC,EAAA,EAAAD,CAAAgH,EAAA,GAQZE,EARYD,EAAA,GAQOE,EARPF,EAAA,GAAAG,EAS2BtH,oBAAS,GATpCuH,EAAArH,OAAAC,EAAA,EAAAD,CAAAoH,EAAA,GASZE,EATYD,EAAA,GASKE,EATLF,EAAA,GAAAG,EAU6B1H,oBAAS,GAVtC2H,EAAAzH,OAAAC,EAAA,EAAAD,CAAAwH,EAAA,GAUZE,EAVYD,EAAA,GAUME,EAVNF,EAAA,GAAAG,EAWuB9H,oBAAS,GAXhC+H,GAAA7H,OAAAC,EAAA,EAAAD,CAAA4H,EAAA,GAWZtD,GAXYuD,GAAA,GAWGC,GAXHD,GAAA,GAAAE,GAYqCjI,oBAAS,GAZ9CkI,GAAAhI,OAAAC,EAAA,EAAAD,CAAA+H,GAAA,GAYZpI,GAZYqI,GAAA,GAYUC,GAZVD,GAAA,GAAAE,GAaqCpI,oBAAS,GAb9CqI,GAAAnI,OAAAC,EAAA,EAAAD,CAAAkI,GAAA,GAaZ/I,GAbYgJ,GAAA,GAaUC,GAbVD,GAAA,GAAAE,GAcuBvI,oBAAS,GAdhCwI,GAAAtI,OAAAC,EAAA,EAAAD,CAAAqI,GAAA,GAcZhJ,GAdYiJ,GAAA,GAcGC,GAdHD,GAAA,GAAAE,GAeiC1I,oBAAS,GAf1C2I,GAAAzI,OAAAC,EAAA,EAAAD,CAAAwI,GAAA,GAeZnE,GAfYoE,GAAA,GAeQC,GAfRD,GAAA,GAAAE,GAgBa7I,oBAAS,GAhBtB8I,GAAA5I,OAAAC,EAAA,EAAAD,CAAA2I,GAAA,GAgBZ/I,GAhBYgJ,GAAA,GAgBFC,GAhBED,GAAA,GAAAE,GAiBiChJ,oBAAS,GAjB1CiJ,GAAA/I,OAAAC,EAAA,EAAAD,CAAA8I,GAAA,GAiBZtD,GAjBYuD,GAAA,GAiBQC,GAjBRD,GAAA,GAkEbxD,GAAc,WAClBS,EAAY,IACZC,EAAW,IACXE,EAAS,IACTE,GAAY,GACZG,GAAqB,GACrBG,GAAqB,GACrBI,GAAsB,GACtBI,GAAqB,GACrBI,GAAmB,GACnBI,GAAoB,GACpBG,IAAiB,GACjBG,IAAwB,GACxBG,IAAwB,GACxBG,IAAiB,GACjBG,IAAsB,GACtBG,IAAY,GACZG,IAAsB,IAmClBC,GAA8B,WAClCzC,GAAqB,GACrBG,GAAqB,IAGjBuC,GAA8B,WAClC1C,GAAqB,GACrBG,GAAqB,IAGjBwC,GAAc,WAClB,IAAIC,EAAMrD,EAAS3E,OAcf+H,EAZahH,EACdkH,cACAC,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,QAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KAEYA,QAAQ,SAAU,SAACC,GAAD,OAC7CC,OAAOC,cAAeF,EAAMG,WAAW,GAAK,GAAKN,GAAO,GAAM,MAGhEnD,EAAWkD,IAGPQ,GAAgB,WACpB,IAAIP,EAAMrD,EAAS3E,OAA2B,EAAlB2E,EAAS3E,OAgCjCwI,EAlBkB,SAAhBC,EAAiB1H,EAASiH,GAC9B,GAAIA,EAAM,EAAG,OAAOS,EAAc1H,EAASiH,EAAM,IAEjD,IADA,IAAIU,EAAS,GACJC,EAAI,EAAGA,EAAI5H,EAAQf,OAAQ2I,IAAK,CACvC,IAAIC,EAAI7H,EAAQ4H,GAChB,GAAIC,EAAEC,MAAM,SAAU,CACpB,IAAIC,EAAO/H,EAAQuH,WAAWK,GAC1BG,GAAQ,IAAMA,GAAQ,GACxBF,EAAIR,OAAOC,cAAeS,EAAO,GAAKd,GAAO,GAAM,IAC1Cc,GAAQ,IAAMA,GAAQ,MAC/BF,EAAIR,OAAOC,cAAeS,EAAO,GAAKd,GAAO,GAAM,KAGvDU,GAAUE,EAEZ,OAAOF,EAGWD,CA9BH1H,EACdkH,cACAC,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,QAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KAoB6BF,GAE9CnD,EAAW2D,IAkBPO,GAA6B,WACjClC,IAAwB,IAkE1B,OAjCA/G,oBAAU,YAjDqB,WAC7B,IAAIkJ,GAA2B,EAC3BC,GAA+B,EAE/BrF,IAAsB1B,GACxB8G,GAA2B,EAC3BC,GAA+B,IAE/BD,GAA2B,EAC3BC,GAA+B,GAEjC1C,EAAoByC,GACpBhC,GAAwBiC,GAsCxBC,IACC,CAACtF,IAEJ9D,oBAAU,WAPR8H,GANiB,KAAbjD,GAA+B,KAAZ5D,GAA4B,KAAV+D,IAexC,CAACH,EAAU5D,EAAS+D,IAEvBhF,oBAAU,YACJvB,IAAwB0E,KAC1BkG,WAAW,WACTtC,IAAwB,GACxBS,IAAsB,IACrB,MAEJ,CAAC/I,GAAsB0E,KAE1BnD,oBAAU,WACRqJ,WAAW,WACT1B,IAAY,IACX,MACF,CAACjJ,KAEJsB,oBAAU,WAtCR4G,MAXE1B,GACAU,GACAI,GACAQ,GACAJ,KA+CD,CACDR,EACAI,EACAQ,EACAJ,EACAlB,IAIA/H,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYgM,YAAU,GACpCnM,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAACkM,EAAD,CACEhL,eA/Pe,SAACS,GACtB8F,EAAY9F,IA+PNR,yBA5PyB,SAACY,GAChCyG,EAAsBzG,IA4PhBX,qBAAsBA,GACtBC,SAAUA,KAEZvB,EAAAC,EAAAC,cAAA,WAASC,UAAU,OACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,eAAehD,UAAU,UAAxC,aAIFH,EAAAC,EAAAC,cAACmM,EAAD,CACEzI,cAnQY,SAACG,GACrB6D,EAAW7D,IAmQHF,wBAhQsB,SAACI,GAC/B6E,EAAqB7E,IAgQb3C,qBAAsBA,GACtBR,qBAAsBA,GACtBgD,QAASA,EACTvC,SAAUA,KAEZvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACoM,EAAD,CACE3F,kBAAmBA,EACnBC,iBAzPa,WACnB6B,GAAsBI,GACxBiC,KACAF,MAEAkB,QAsPM9L,EAAAC,EAAAC,cAACqM,EAAD,CACEtH,kBAAmBA,EACnB+B,iBApPa,WACvB6D,KAEIpC,GAAsBI,EACxByC,KAEAQ,QAgPM9L,EAAAC,EAAAC,cAACsM,EAAD,CACErF,mBAAoBA,GACpBD,YAAaA,OAInBlH,EAAAC,EAAAC,cAAA,WAASC,UAAU,OACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,aAAahD,UAAU,UAAtC,YAIFH,EAAAC,EAAAC,cAACuM,EAAD,CACE1H,YAxRU,SAACG,GACnB4C,EAAS5C,IAwRDF,sBArRoB,SAACI,GAC7B8D,EAAmB9D,IAqRX9D,qBAAsBA,GACtBC,SAAUA,GACV0D,kBAAmBA,IAErBjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAACwM,EAAD,CACEhF,SAAUA,EACV5D,QAASA,EACT+D,MAAOA,EACPR,WAhPO,SAAC7D,GAClBA,EAAMmJ,iBACN,IAAIC,GAA0B,EAC9Bd,KAEA,IAAIe,EAAS,CACX/I,QAASA,EACTgJ,QAASjF,GAOP5B,IACF2G,GAA0B,EAE1BG,YAPgB,wBACC,mBAMWF,EALf,8BAMVG,KAAK,SAACC,GACLC,QAAQC,IAAI,WAAYF,EAASG,OAAQH,EAASI,QAEnDC,MAAM,SAACC,GACNL,QAAQC,IAAI,YAAaI,KAE7BrB,WAAWhF,GAAa,MAExB4E,KAGFzB,GAAsBuC,QAuNlB5M,EAAAC,EAAAC,cAAA,WAASC,UAAU,OACjBH,EAAAC,EAAAC,cAACsN,EAAD,CACEzH,eAjSa,SAACG,GACtB8B,EAAY9B,IAiSJ5E,qBAAsBA,GACtB0E,mBAAoBA,GACpBC,cAAeA,GACf1E,SAAUA,GACV0D,kBAAmBA,MAIzBjF,EAAAC,EAAAC,cAACuN,EAAD,CACEzH,mBAAoBA,GACpBhF,cAAeA,GACfM,qBAAsBA,OCpVfoM,EATH,WACV,OACE1N,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuG,SAAA,KACExG,EAAAC,EAAAC,cAACyN,EAAD,MACA3N,EAAAC,EAAAC,cAAC0N,EAAD,QCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpC,MACvB,2DCbNqC,IAASC,OAAOlO,EAAAC,EAAAC,cAACiO,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxB,KAAK,SAAAyB,GACjCA,EAAaC","file":"static/js/main.ee989b00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.acd54ad6.png\";","import React from \"react\";\r\nimport logo from \"../img/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"py-5 text-center\">\r\n      <img\r\n        className=\"d-block mx-auto mb-3\"\r\n        src={logo}\r\n        alt=\"project logo\"\r\n        width=\"72\"\r\n        height=\"72\"\r\n      />\r\n      <h1>Message encryption</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Messages = {\r\n  errorPasswordTooShort: \"The key is too short\",\r\n  errorPasswordTooLong: \"The key is too long\",\r\n  errorMessageTooShort: \"The text is too short\",\r\n  errorMessageTooLong: \"The text is too long\",\r\n  errorMessageNotCoded: \"The message was not coded\",\r\n  errorEmailIsInvalid: \"Check if the mail is correct\",\r\n  errorcheckbox: \"Please confirm\",\r\n  messageSend: \"Success! Message was sent\",\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport messages from \"../assets/Messages.js\";\r\n\r\nconst Password = ({\r\n  updatePassword,\r\n  updatePasswordValidation,\r\n  showValidationErrors,\r\n  resetAll,\r\n}) => {\r\n  const [localPassword, setlocalPassword] = useState(\"\");\r\n  const [localPasswordValidation, setlocalPasswordValidation] = useState(false);\r\n  const [errorPasswordTooShort, setErrorPasswordTooShort] = useState(true);\r\n  const [errorPasswordTooLong, setErrorPasswordTooLong] = useState(false);\r\n\r\n  const handleChangePassword = (event) => setlocalPassword(event.target.value);\r\n\r\n  const handlePasswordValidation = () => {\r\n    let checkPassword = localPassword.length;\r\n    let PasswordTooShort = true;\r\n    let PasswordTooLong = false;\r\n    let checkPasswordValidation = false;\r\n\r\n    if (checkPassword < 4) {\r\n      PasswordTooShort = true;\r\n    } else {\r\n      PasswordTooShort = false;\r\n    }\r\n\r\n    if (checkPassword >= 25) {\r\n      PasswordTooLong = true;\r\n    } else {\r\n      PasswordTooLong = false;\r\n    }\r\n\r\n    if (!errorPasswordTooShort && !errorPasswordTooLong) {\r\n      checkPasswordValidation = true;\r\n    } else {\r\n      checkPasswordValidation = false;\r\n    }\r\n\r\n    setErrorPasswordTooShort(PasswordTooShort);\r\n    setErrorPasswordTooLong(PasswordTooLong);\r\n    setlocalPasswordValidation(checkPasswordValidation);\r\n  };\r\n\r\n  let passwordStyle = \"form-control margin text-center\";\r\n\r\n  if (\r\n    (showValidationErrors && errorPasswordTooShort) ||\r\n    (showValidationErrors && errorPasswordTooLong)\r\n  ) {\r\n    passwordStyle = \"form-control margin3 text-center is-invalid\";\r\n  } else {\r\n    passwordStyle = \"form-control margin text-center\";\r\n  }\r\n\r\n  let passwordErrorTooShort = showValidationErrors && errorPasswordTooShort && (\r\n    <center>{messages.errorPasswordTooShort}</center>\r\n  );\r\n  let passwordErrorTooLong = showValidationErrors && errorPasswordTooLong && (\r\n    <center>{messages.errorPasswordTooLong}</center>\r\n  );\r\n\r\n  useEffect(() => {\r\n    handlePasswordValidation();\r\n    updatePassword(localPassword);\r\n    updatePasswordValidation(localPasswordValidation);\r\n  }, [localPassword]);\r\n\r\n  useEffect(() => {\r\n    setlocalPassword(\"\");\r\n    setlocalPasswordValidation(false);\r\n    setErrorPasswordTooShort(true);\r\n    setErrorPasswordTooLong(false);\r\n  }, [resetAll]);\r\n\r\n  return (\r\n    <section className=\"row\">\r\n      <div className=\"col col-lg-2 text-right\">\r\n        <label htmlFor=\"passwordInput\" className=\"margin\">\r\n          Enter the key:\r\n        </label>\r\n      </div>\r\n      <div className=\"col col-md-4\">\r\n        <input\r\n          id=\"passwordInput\"\r\n          type=\"password\"\r\n          className={passwordStyle}\r\n          value={localPassword}\r\n          onChange={handleChangePassword}\r\n          required\r\n        />\r\n        <div className=\"margin2\">\r\n          {passwordErrorTooShort}\r\n          {passwordErrorTooLong}\r\n        </div>\r\n      </div>\r\n      <div className=\"col col-lg-2 margin\"></div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport messages from \"../assets/Messages.js\";\r\n\r\nconst Message = ({\r\n  updateMessage,\r\n  updateMessageValidation,\r\n  showValidationErrors,\r\n  errorMessageNotCoded,\r\n  message,\r\n  resetAll,\r\n}) => {\r\n  const [localMessage, setLocalMessage] = useState(message);\r\n  const [localMessageValidation, setlocalMessageValidation] = useState(false);\r\n  const [errorMessageTooShort, setErrorMessageTooShort] = useState(true);\r\n  const [errorMessageTooLong, setErrorMessageTooLong] = useState(false);\r\n\r\n  const handleChangeMessage = (event) => setLocalMessage(event.target.value);\r\n\r\n  const handleMessageValidation = () => {\r\n    let checkErrorMessageTooShort = false;\r\n    let checkErrorMessageTooLong = false;\r\n    let checkMessageValidation = false;\r\n\r\n    if (localMessage.length < 4) {\r\n      checkErrorMessageTooShort = true;\r\n    } else {\r\n      checkErrorMessageTooShort = false;\r\n    }\r\n\r\n    if (localMessage.length > 51) {\r\n      checkErrorMessageTooLong = true;\r\n    } else {\r\n      checkErrorMessageTooLong = false;\r\n    }\r\n\r\n    if (!errorMessageTooShort && !errorMessageTooLong) {\r\n      checkMessageValidation = true;\r\n    } else {\r\n      checkMessageValidation = false;\r\n    }\r\n\r\n    setErrorMessageTooShort(checkErrorMessageTooShort);\r\n    setErrorMessageTooLong(checkErrorMessageTooLong);\r\n    setlocalMessageValidation(checkMessageValidation);\r\n  };\r\n\r\n  let messageStyle = \"form-control margin text-center\";\r\n\r\n  if (\r\n    (showValidationErrors && errorMessageTooShort) ||\r\n    (showValidationErrors && errorMessageTooLong) ||\r\n    (showValidationErrors && errorMessageNotCoded)\r\n  ) {\r\n    messageStyle = \"form-control margin3 text-center is-invalid\";\r\n  } else {\r\n    messageStyle = \"form-control margin text-center\";\r\n  }\r\n\r\n  let messageErrorTooShort = showValidationErrors && errorMessageTooShort && (\r\n    <center>{messages.errorMessageTooShort}</center>\r\n  );\r\n  let messageErrorTooLong = showValidationErrors && errorMessageTooLong && (\r\n    <center>{messages.errorMessageTooLong}</center>\r\n  );\r\n  let messageErrorNotCoded = showValidationErrors && errorMessageNotCoded && (\r\n    <center>{messages.errorMessageNotCoded}</center>\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleMessageValidation();\r\n    updateMessage(localMessage);\r\n    updateMessageValidation(localMessageValidation);\r\n  }, [localMessage]);\r\n\r\n  useEffect(() => {\r\n    setLocalMessage(\"\");\r\n    setlocalMessageValidation(false);\r\n    setErrorMessageTooShort(true);\r\n    setErrorMessageTooLong(false);\r\n  }, [resetAll]);\r\n\r\n  useEffect(() => {\r\n    setLocalMessage(message);\r\n  }, [message]);\r\n\r\n  return (\r\n    <div className=\"col col-md-4\">\r\n      <textarea\r\n        id=\"messageInput\"\r\n        className={messageStyle}\r\n        rows=\"5\"\r\n        value={localMessage}\r\n        onChange={handleChangeMessage}\r\n        required\r\n      />\r\n\r\n      <div className=\"margin2\">\r\n        {messageErrorTooShort}\r\n        {messageErrorTooLong}\r\n        {messageErrorNotCoded}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport messages from \"../assets/Messages.js\";\r\n\r\nconst Email = ({\r\n  updateEmail,\r\n  updateEmailValidation,\r\n  showValidationErrors,\r\n  resetAll,\r\n  decryptionClicked,\r\n}) => {\r\n  const [localEmail, setLocalEmail] = useState(\"\");\r\n  const [localEmailValidation, setLocalEmailValidation] = useState(false);\r\n  const [errorEmailIsInvalid, setErrorEmailIsInvalid] = useState(false);\r\n\r\n  const handleChangeEmail = (event) => setLocalEmail(event.target.value);\r\n\r\n  const handleEmailValidation = () => {\r\n    let checkEmailValidation = false;\r\n    let checkErrorEmailIsInvalid = false;\r\n\r\n    if (\r\n      localEmail.length > 6 &&\r\n      localEmail.indexOf(\"@\") !== -1 &&\r\n      localEmail.indexOf(\".\") !== -1\r\n    ) {\r\n      checkEmailValidation = true;\r\n      checkErrorEmailIsInvalid = false;\r\n    } else {\r\n      checkEmailValidation = false;\r\n      checkErrorEmailIsInvalid = true;\r\n    }\r\n\r\n    setLocalEmailValidation(checkEmailValidation);\r\n    setErrorEmailIsInvalid(checkErrorEmailIsInvalid);\r\n  };\r\n\r\n  let emailStyle = \"form-control margin text-center\";\r\n\r\n  if (!decryptionClicked && showValidationErrors && errorEmailIsInvalid) {\r\n    emailStyle = \"form-control margin3 text-center is-invalid\";\r\n  } else {\r\n    emailStyle = \"form-control margin text-center\";\r\n  }\r\n\r\n  let emailIsInvalid = !decryptionClicked &&\r\n    showValidationErrors &&\r\n    errorEmailIsInvalid && <center>{messages.errorEmailIsInvalid}</center>;\r\n\r\n  useEffect(() => {\r\n    handleEmailValidation();\r\n    updateEmail(localEmail);\r\n    updateEmailValidation(localEmailValidation);\r\n  }, [localEmail, localEmailValidation]);\r\n\r\n  useEffect(() => {\r\n    setLocalEmail(\"\");\r\n    setLocalEmailValidation(false);\r\n    setErrorEmailIsInvalid(false);\r\n  }, [resetAll]);\r\n\r\n  return (\r\n    <div className=\"col col-md-4\">\r\n      <input\r\n        id=\"emailInput\"\r\n        type=\"email\"\r\n        className={emailStyle}\r\n        placeholder=\"Send a message to your friend\"\r\n        value={localEmail}\r\n        onChange={handleChangeEmail}\r\n        required\r\n      />\r\n      <div className=\"margin2\">{emailIsInvalid}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport messages from \"../assets/Messages.js\";\r\n\r\nconst Checkbox = ({\r\n  updateCheckbox,\r\n  showValidationErrors,\r\n  showMessageWasSent,\r\n  allValidation,\r\n  resetAll,\r\n  decryptionClicked\r\n}) => {\r\n  const [localCheckbox, setlocalCheckbox] = useState(false);\r\n  const [localErrorcheckbox, setlocalErrorcheckbox] = useState(false);\r\n\r\n  const checkboxValidation = () => {\r\n    let checkErrorcheckbox = false;\r\n\r\n    if (!localCheckbox) {\r\n      checkErrorcheckbox = true;\r\n    } else {\r\n      checkErrorcheckbox = false;\r\n    }\r\n\r\n    setlocalErrorcheckbox(checkErrorcheckbox);\r\n  };\r\n\r\n  const handleCheckbox = () => {\r\n    let checkCheckbox = false;\r\n\r\n    if (localCheckbox) {\r\n      checkCheckbox = false;\r\n    } else {\r\n      checkCheckbox = true;\r\n    }\r\n    setlocalCheckbox(checkCheckbox);\r\n  };\r\n\r\n  let checkboxError = !decryptionClicked && showValidationErrors && localErrorcheckbox && (\r\n    <center>{messages.errorcheckbox}</center>\r\n  );\r\n  let messageSend = showMessageWasSent && allValidation && (\r\n    <center>{messages.messageSend}</center>\r\n  );\r\n  let emailFeedbackStyle = \"invalid-feedback margin2\";\r\n  if (showMessageWasSent) {\r\n    emailFeedbackStyle = \"margin4 sendMessage\";\r\n  } else {\r\n    emailFeedbackStyle = \"invalid-feedback margin2\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkboxValidation();\r\n    updateCheckbox(localCheckbox);\r\n  }, [localCheckbox]);\r\n\r\n  useEffect(() => {\r\n    setlocalCheckbox(false);\r\n    setlocalErrorcheckbox(false)\r\n  }, [resetAll]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col col-lg-2\"> </div>\r\n      <div className=\"col col-lg-4\">\r\n        <div className=\"form-check\">\r\n          <input\r\n            id=\"checkbox\"\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            onChange={handleCheckbox}\r\n            checked={localCheckbox}\r\n            required\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"checkbox\">\r\n            I'm not a robot\r\n          </label>\r\n        </div>\r\n        <div className={emailFeedbackStyle}>{messageSend}</div>\r\n        <div className=\"margin2 margin4\">{checkboxError}</div>\r\n      </div>\r\n      <div className=\"col col-lg-2 margin\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\n\r\nconst EncryptionButton = ({ encryptionClicked, handleEncryption }) => {\r\n  const encryptionButton = encryptionClicked ? (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-outline-primary btnBreak2\"\r\n      disabled\r\n    >\r\n      Encryption\r\n    </button>\r\n  ) : (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-outline-primary btnBreak2\"\r\n      onClick={handleEncryption}\r\n    >\r\n      Encryption\r\n    </button>\r\n  );\r\n\r\n  return encryptionButton \r\n};\r\n\r\nexport default EncryptionButton;\r\n","import React from \"react\";\r\n\r\nconst DecryptionButton = ({ decryptionClicked, handleDecryption }) => {\r\n  const decryptionButton = decryptionClicked ? (\r\n    <button type=\"button\" className=\"btn btn-outline-primary btnBreak\" disabled>\r\n      Decryption\r\n    </button>\r\n  ) : (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-outline-primary btnBreak\"\r\n      onClick={handleDecryption}\r\n    >\r\n      Decryption\r\n    </button>\r\n  );\r\n\r\n  return decryptionButton;\r\n};\r\n\r\nexport default DecryptionButton;\r\n","import React from \"react\";\r\n\r\nconst ResetButton = ({handleReset, resetButtonVisible}) => {\r\n  const resetButton = resetButtonVisible ? (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-primary btnBreak2\"\r\n        onClick={handleReset}\r\n      >\r\n        Reset\r\n      </button>\r\n    ) : (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-primary btnBreak2\"\r\n        disabled\r\n      >\r\n        Reset\r\n      </button>\r\n    );\r\n\r\n  return resetButton;\r\n};\r\n\r\nexport default ResetButton;\r\n","import React from \"react\";\r\n\r\nconst SendButton = ({ handleSend }) => {\r\n  return (\r\n    <button\r\n      className=\"btn btn-outline-primary btnBreak3\"\r\n      type=\"submit\"\r\n      value=\"Send\"\r\n      onClick={handleSend}\r\n    >\r\n      Send\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SendButton;\r\n","import React from \"react\";\r\n\r\nconst Footer = ({showMessageWasSent, errorcheckbox, showValidationErrors}) => {\r\n  let footerStyle = \"\";\r\n\r\n  if (showMessageWasSent || (errorcheckbox && showValidationErrors)) {\r\n    footerStyle = \"mb-1 marginFooter2\";\r\n  } else {\r\n    footerStyle = \"mb-1 marginFooter\";\r\n  }\r\n\r\n  return (\r\n    <footer className=\"mt-5 pt-3 text-muted text-center text-small\">\r\n      <p className={footerStyle}>©2019-2021 The BestCode Corp.</p>\r\n      <nav id=\"footer-navigation\">\r\n        <ul className=\"list-inline\">\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#\">Privacy</a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#\">Terms</a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#\">Support</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { send } from \"emailjs-com\";\r\nimport Password from \"./Password.jsx\";\r\nimport Message from \"./Message.jsx\";\r\nimport Email from \"./Email.jsx\";\r\nimport Checkbox from \"./Checkbox.jsx\";\r\nimport EncryptionButton from \"./EncryptionButton.jsx\";\r\nimport DecryptionButton from \"./DecryptionButton.jsx\";\r\nimport ResetButton from \"./ResetButton.jsx\";\r\nimport SendButton from \"./SendButton.jsx\";\r\nimport Footer from \"./Footer.jsx\";\r\n\r\nconst Coding = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [checkbox, setCheckbox] = useState(false);\r\n  const [encryptionClicked, setEncryptionClicked] = useState(false);\r\n  const [decryptionClicked, setDecryptionClicked] = useState(false);\r\n  const [passwordValidation, setPasswordValidation] = useState(false);\r\n  const [messageValidation, setMessageValidation] = useState(false);\r\n  const [emailValidation, setEmailValidation] = useState(false);\r\n  const [codingValidation, setCodingValidation] = useState(false);\r\n  const [allValidation, setAllValidation] = useState(false);\r\n  const [showValidationErrors, setShowValidationErrors] = useState(false);\r\n  const [errorMessageNotCoded, setErrorMessageNotCoded] = useState(false);\r\n  const [errorcheckbox, setErrorcheckbox] = useState(false);\r\n  const [showMessageWasSent, setShowMessageWasSent] = useState(false);\r\n  const [resetAll, setresetAll] = useState(false);\r\n  const [resetButtonVisible, setResetButtonVisible] = useState(false);\r\n\r\n  const updatePassword = (localPassword) => {\r\n    setPassword(localPassword);\r\n  };\r\n\r\n  const updatePasswordValidation = (localPasswordValidation) => {\r\n    setPasswordValidation(localPasswordValidation);\r\n  };\r\n\r\n  const updateMessage = (localMessage) => {\r\n    setMessage(localMessage);\r\n  };\r\n\r\n  const updateMessageValidation = (localMessageValidation) => {\r\n    setMessageValidation(localMessageValidation);\r\n  };\r\n\r\n  const updateEmail = (localEmail) => {\r\n    setEmail(localEmail);\r\n  };\r\n\r\n  const updateEmailValidation = (localEmailValidation) => {\r\n    setEmailValidation(localEmailValidation);\r\n  };\r\n\r\n  const updateCheckbox = (localCheckbox) => {\r\n    setCheckbox(localCheckbox);\r\n  };\r\n\r\n  const handleEncryption = () => {\r\n    if (passwordValidation && messageValidation) {\r\n      codeMessage();\r\n      handleEncryptionClickStatus();\r\n    } else {\r\n      handleShowValidationErrors();\r\n    }\r\n  };\r\n\r\n  const handleDecryption = () => {\r\n    handleDecryptionClickStatus();\r\n\r\n    if (passwordValidation && messageValidation) {\r\n      decodeMessage();\r\n    } else {\r\n      handleShowValidationErrors();\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setPassword(\"\");\r\n    setMessage(\"\");\r\n    setEmail(\"\");\r\n    setCheckbox(false);\r\n    setEncryptionClicked(false);\r\n    setDecryptionClicked(false);\r\n    setPasswordValidation(false);\r\n    setMessageValidation(false);\r\n    setEmailValidation(false);\r\n    setCodingValidation(false);\r\n    setAllValidation(false);\r\n    setShowValidationErrors(false);\r\n    setErrorMessageNotCoded(false);\r\n    setErrorcheckbox(false);\r\n    setShowMessageWasSent(false);\r\n    setresetAll(true);\r\n    setResetButtonVisible(false);\r\n  };\r\n\r\n  const handleSend = (event) => {\r\n    event.preventDefault();\r\n    let checkShowMessageWasSent = false;\r\n    handleShowValidationErrors();\r\n\r\n    let toSend = {\r\n      message: message,\r\n      send_to: email,\r\n    };\r\n\r\n    const ServiceID = \"service_messagecoding\";\r\n    const TemplateID = \"template_50l63q9\";\r\n    const UserID = \"user_ODU8rLD61NH0RQu6lmxOx\";\r\n\r\n    if (allValidation) {\r\n      checkShowMessageWasSent = true;\r\n\r\n      send(ServiceID, TemplateID, toSend, UserID)\r\n        .then((response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"FAILED...\", err);\r\n        });\r\n      setTimeout(handleReset, 4000);\r\n    } else {\r\n      handleShowValidationErrors();\r\n    }\r\n\r\n    setShowMessageWasSent(checkShowMessageWasSent);\r\n  };\r\n\r\n  const handleEncryptionClickStatus = () => {\r\n    setEncryptionClicked(true);\r\n    setDecryptionClicked(false);\r\n  };\r\n\r\n  const handleDecryptionClickStatus = () => {\r\n    setEncryptionClicked(false);\r\n    setDecryptionClicked(true);\r\n  };\r\n\r\n  const codeMessage = () => {\r\n    let key = password.length;\r\n\r\n    let newMessage = message\r\n      .toUpperCase()\r\n      .replace(/Ą/g, \"A\")\r\n      .replace(/Ć/g, \"C\")\r\n      .replace(/Ę/g, \"E\")\r\n      .replace(/Ł/g, \"L\")\r\n      .replace(/Ń/g, \"N\")\r\n      .replace(/Ó/g, \"O\")\r\n      .replace(/Ś/g, \"S\")\r\n      .replace(/Ż/g, \"Z\")\r\n      .replace(/Ź/g, \"Z\");\r\n\r\n    let codeMessage = newMessage.replace(/[A-Z]/g, (imput) =>\r\n      String.fromCharCode(((imput.charCodeAt(0) - 65 + key) % 26) + 65)\r\n    );\r\n\r\n    setMessage(codeMessage);\r\n  };\r\n\r\n  const decodeMessage = () => {\r\n    let key = password.length - password.length * 2;\r\n\r\n    let newMessage = message\r\n      .toUpperCase()\r\n      .replace(/Ą/g, \"A\")\r\n      .replace(/Ć/g, \"C\")\r\n      .replace(/Ę/g, \"E\")\r\n      .replace(/Ł/g, \"L\")\r\n      .replace(/Ń/g, \"N\")\r\n      .replace(/Ó/g, \"O\")\r\n      .replace(/Ś/g, \"S\")\r\n      .replace(/Ż/g, \"Z\")\r\n      .replace(/Ź/g, \"Z\");\r\n\r\n    const noCodeMessage = (message, key) => {\r\n      if (key < 0) return noCodeMessage(message, key + 26);\r\n      let output = \"\";\r\n      for (let i = 0; i < message.length; i++) {\r\n        let c = message[i];\r\n        if (c.match(/[A-Z]/)) {\r\n          let code = message.charCodeAt(i);\r\n          if (code >= 65 && code <= 90) {\r\n            c = String.fromCharCode(((code - 65 + key) % 26) + 65);\r\n          } else if (code >= 97 && code <= 122) {\r\n            c = String.fromCharCode(((code - 97 + key) % 26) + 97);\r\n          }\r\n        }\r\n        output += c;\r\n      }\r\n      return output;\r\n    };\r\n\r\n    let codeToMessage = noCodeMessage(newMessage, key);\r\n\r\n    setMessage(codeToMessage);\r\n  };\r\n\r\n  const handleCodingValidation = () => {\r\n    let checksetCodingValidation = false;\r\n    let checksetErrorMessageNotCoded = false;\r\n\r\n    if (encryptionClicked && !decryptionClicked) {\r\n      checksetCodingValidation = true;\r\n      checksetErrorMessageNotCoded = false;\r\n    } else {\r\n      checksetCodingValidation = false;\r\n      checksetErrorMessageNotCoded = true;\r\n    }\r\n    setCodingValidation(checksetCodingValidation);\r\n    setErrorMessageNotCoded(checksetErrorMessageNotCoded);\r\n  };\r\n\r\n  const handleShowValidationErrors = () => {\r\n    setShowValidationErrors(true);\r\n  };\r\n\r\n  const handleAllValidation = () => {\r\n    let checkAllValidation = false;\r\n\r\n    if (\r\n      checkbox &&\r\n      passwordValidation &&\r\n      messageValidation &&\r\n      codingValidation &&\r\n      emailValidation\r\n    ) {\r\n      checkAllValidation = true;\r\n    } else {\r\n      checkAllValidation = false;\r\n    }\r\n\r\n    setAllValidation(checkAllValidation);\r\n  };\r\n\r\n  const resetButtonVisibleValidation = () => {\r\n    let checkResetButtonValidation = false;\r\n\r\n    if (password !== \"\" || message !== \"\" || email !== \"\") {\r\n      checkResetButtonValidation = true;\r\n    } else {\r\n      checkResetButtonValidation = false;\r\n    }\r\n\r\n    setResetButtonVisible(checkResetButtonValidation);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCodingValidation();\r\n  }, [encryptionClicked]);\r\n\r\n  useEffect(() => {\r\n    resetButtonVisibleValidation();\r\n  }, [password, message, email]);\r\n\r\n  useEffect(() => {\r\n    if (showValidationErrors || showMessageWasSent) {\r\n      setTimeout(() => {\r\n        setShowValidationErrors(false);\r\n        setShowMessageWasSent(false);\r\n      }, 4000);\r\n    }\r\n  }, [showValidationErrors, showMessageWasSent]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setresetAll(false);\r\n    }, 1000);\r\n  }, [resetAll]);\r\n\r\n  useEffect(() => {\r\n    handleAllValidation();\r\n  }, [\r\n    passwordValidation,\r\n    messageValidation,\r\n    codingValidation,\r\n    emailValidation,\r\n    checkbox,\r\n  ]);\r\n\r\n  return (\r\n    <form className=\"container\" noValidate>\r\n      <main className=\"marginTop\">\r\n        <Password\r\n          updatePassword={updatePassword}\r\n          updatePasswordValidation={updatePasswordValidation}\r\n          showValidationErrors={showValidationErrors}\r\n          resetAll={resetAll}\r\n        />\r\n        <section className=\"row\">\r\n          <div className=\"col col-lg-2 text-right\">\r\n            <label htmlFor=\"messageInput\" className=\"margin\">\r\n              Message:\r\n            </label>\r\n          </div>\r\n          <Message\r\n            updateMessage={updateMessage}\r\n            updateMessageValidation={updateMessageValidation}\r\n            showValidationErrors={showValidationErrors}\r\n            errorMessageNotCoded={errorMessageNotCoded}\r\n            message={message}\r\n            resetAll={resetAll}\r\n          />\r\n          <div className=\"col col-lg-2 margin\">\r\n            <EncryptionButton\r\n              encryptionClicked={encryptionClicked}\r\n              handleEncryption={handleEncryption}\r\n            />\r\n            <DecryptionButton\r\n              decryptionClicked={decryptionClicked}\r\n              handleDecryption={handleDecryption}\r\n            />\r\n            <ResetButton\r\n              resetButtonVisible={resetButtonVisible}\r\n              handleReset={handleReset}\r\n            />\r\n          </div>\r\n        </section>\r\n        <section className=\"row\">\r\n          <div className=\"col col-lg-2 text-right\">\r\n            <label htmlFor=\"emailInput\" className=\"margin\">\r\n              E-mail:\r\n            </label>\r\n          </div>\r\n          <Email\r\n            updateEmail={updateEmail}\r\n            updateEmailValidation={updateEmailValidation}\r\n            showValidationErrors={showValidationErrors}\r\n            resetAll={resetAll}\r\n            decryptionClicked={decryptionClicked}\r\n          />\r\n          <div className=\"col col-lg-2 margin mobile\">\r\n            <SendButton\r\n              password={password}\r\n              message={message}\r\n              email={email}\r\n              handleSend={handleSend}\r\n            />\r\n          </div>\r\n        </section>\r\n        <section className=\"row\">\r\n          <Checkbox\r\n            updateCheckbox={updateCheckbox}\r\n            showValidationErrors={showValidationErrors}\r\n            showMessageWasSent={showMessageWasSent}\r\n            allValidation={allValidation}\r\n            resetAll={resetAll}\r\n            decryptionClicked={decryptionClicked}\r\n          />\r\n        </section>\r\n      </main>\r\n      <Footer\r\n        showMessageWasSent={showMessageWasSent}\r\n        errorcheckbox={errorcheckbox}\r\n        showValidationErrors={showValidationErrors}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Coding;\r\n","import React from \"react\";\r\nimport \"../styles/normalize.sass\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../styles/style.sass\";\r\nimport Header from \"./Header.jsx\";\r\nimport Coding from \"./CodingHook.jsx\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Coding />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}