{"version":3,"sources":["img/logo.png","components/Header.js","components/Footer.js","components/Coding.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","width","height","Footer","props","footerStyle","correct","id","href","Coding","state","password","message","email","errors","passwordToShort","messageToShort","messages","password_error","password_error2","message_error","message_error2","email_error","message_send","handleChange","event","target","value","_this","setState","Object","defineProperty","handleResetAll","messageSend","messageToCode","key","length","codeMessage","toUpperCase","replace","imput","String","fromCharCode","charCodeAt","handleCodeToMessage","codeToMessage","noCodeMessage","output","i","c","match","code","CodeValidation","handleCodeMessage","validation","SendValidation","indexOf","handleSendMessage","preventDefault","setTimeout","_this2","this","passwordStyle","messageStyle","emailStyle","emailFeedbackStyle","noValidate","htmlFor","type","aria-describedby","required","onChange","rows","onClick","placeholder","components_Footer","Component","App","Fragment","components_Header","components_Coding","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.353f4f2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.acd54ad6.png\";","import React from 'react';\r\nimport logo from '../img/logo.png'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"py-5 text-center\">\r\n            <img className=\"d-block mx-auto mb-3\" src={logo} alt=\"project logo\" width=\"72\" height=\"72\" />\r\n            <h1>Message encryption</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nconst Footer = props => {\r\n\r\n    let footerStyle = ''\r\n\r\n    if (props.correct) {\r\n        footerStyle = 'mb-1 marginFooter2'\r\n    } else {\r\n        footerStyle = 'mb-1 marginFooter'\r\n    }\r\n\r\n    return (\r\n        <footer className='mt-5 pt-3 text-muted text-center text-small'>\r\n            <p className={footerStyle} >Â©2019 The BestCode Corp.</p>\r\n            <nav id=\"footer-navigation\">\r\n            <ul className=\"list-inline\">\r\n                <li className=\"list-inline-item\"><a href=\"#\">Privacy</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"#\">Terms</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"#\">Support</a></li>\r\n            </ul>\r\n            </nav>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\r\nimport Footer from './Footer'\r\n\r\nclass Coding extends Component {\r\n\r\n    state = {\r\n        password: '',\r\n        message: '',\r\n        email: '',\r\n        correct: false,\r\n        errors: {\r\n            password: false,\r\n            passwordToShort: false,\r\n            message: false,\r\n            messageToShort: false,\r\n            email: false,\r\n        }\r\n    }\r\n\r\n    messages = {\r\n        password_error: 'The key is too short',\r\n        password_error2: 'The key is too long',\r\n        message_error: 'The text is too short',\r\n        message_error2: 'The text is too long',\r\n        email_error: 'Check if the mail is correct',\r\n        message_send: 'Success! Message was sent'\r\n    }\r\n\r\n    handleChange = event => {\r\n        const id = event.target.id\r\n        const value = event.target.value\r\n        this.setState({\r\n            [id]: value\r\n        })\r\n    }\r\n\r\n    handleResetAll = () => {\r\n        this.setState({\r\n            password: '',\r\n            message: '',\r\n            email: '',\r\n            correct: false,\r\n            messageSend: '',\r\n            errors: {\r\n                password: false,\r\n                passwordToShort: false,\r\n                message: false,\r\n                messageToShort: false,\r\n                email: false\r\n            }\r\n        })\r\n    }\r\n\r\n    messageToCode = () => {\r\n        let key = this.state.password.length\r\n        let message = this.state.message\r\n\r\n        let newMessage = message.toUpperCase().replace(/Ä/g, 'A').replace(/Ä/g, 'C').replace(/Ä/g, 'E').replace(/Å/g, 'L').replace(/Å/g, 'N').replace(/Ã/g, 'O').replace(/Å/g, 'S').replace(/Å»/g, 'Z').replace(/Å¹/g, 'Z')\r\n\r\n        let codeMessage = newMessage.replace(/[A-Z]/g, imput => String.fromCharCode((imput.charCodeAt(0) - 65 + key) % 26 + 65));\r\n\r\n        this.setState({\r\n            message: codeMessage\r\n        })\r\n    }\r\n\r\n    handleCodeToMessage = () => {\r\n        let key = this.state.password.length - (this.state.password.length * 2)\r\n        let message = this.state.message\r\n\r\n        const noCodeMessage = (message, key) => {\r\n            if (key < 0)\r\n                return noCodeMessage(message, key + 26);\r\n            let output = '';\r\n            for (let i = 0; i < message.length; i++) {\r\n                let c = message[i];\r\n                if (c.match(/[A-Z]/)) {\r\n                    let code = message.charCodeAt(i);\r\n                    if ((code >= 65) && (code <= 90))\r\n                        c = String.fromCharCode(((code - 65 + key) % 26) + 65);\r\n                    else if ((code >= 97) && (code <= 122))\r\n                        c = String.fromCharCode(((code - 97 + key) % 26) + 97);\r\n                }\r\n                output += c\r\n            }\r\n            return output;\r\n        };\r\n\r\n        let codeToMessage = noCodeMessage(message, key)\r\n\r\n        this.setState({\r\n            message: codeToMessage\r\n        })\r\n\r\n    }\r\n\r\n    CodeValidation = () => {\r\n\r\n        let password = false\r\n        let passwordToShort = false\r\n        let message = false\r\n        let messageToShort = false\r\n        let correct = false\r\n\r\n        if (this.state.password.length > 4) {\r\n            passwordToShort = true;\r\n        }\r\n        if (this.state.password.length <= 25) {\r\n            password = true;\r\n        }\r\n        if (this.state.message.length < 51) {\r\n            message = true\r\n        }\r\n        if (this.state.message.length > 4) {\r\n            messageToShort = true\r\n        }\r\n        if (password && passwordToShort && message && messageToShort) {\r\n            correct = true\r\n        }\r\n\r\n        return ({\r\n            password,\r\n            passwordToShort,\r\n            message,\r\n            messageToShort,\r\n            correct\r\n        })\r\n\r\n    }\r\n\r\n    handleCodeMessage = () => {\r\n\r\n        const validation = this.CodeValidation()\r\n\r\n        if (validation.correct) {\r\n\r\n            this.messageToCode()\r\n\r\n        } else {\r\n\r\n            this.setState({\r\n                errors: {\r\n                    password: !validation.password,\r\n                    passwordToShort: !validation.passwordToShort,\r\n                    message: !validation.message,\r\n                    messageToShort: !validation.messageToShort\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    SendValidation = () => {\r\n        let password = false\r\n        let passwordToShort = false\r\n        let message = false\r\n        let messageToShort = false\r\n        let email = false\r\n        let correct = false\r\n\r\n        if (this.state.password.length > 4) {\r\n            passwordToShort = true;\r\n        }\r\n        if (this.state.password.length <= 25) {\r\n            password = true;\r\n        }\r\n        if (this.state.message.length < 51) {\r\n            message = true\r\n        }\r\n        if (this.state.message.length > 4) {\r\n            messageToShort = true\r\n        }\r\n        if (this.state.email.length > 6 && this.state.email.indexOf('@') !== -1) {\r\n            email = true\r\n        }\r\n        if (password && passwordToShort && message && messageToShort && email) {\r\n            correct = true\r\n        }\r\n\r\n        return ({\r\n            password,\r\n            passwordToShort,\r\n            message,\r\n            messageToShort,\r\n            email,\r\n            correct\r\n        })\r\n    }\r\n\r\n    handleSendMessage = event => {\r\n\r\n        event.preventDefault()\r\n\r\n        const validation = this.SendValidation()\r\n\r\n        if (validation.correct) {\r\n            this.setState({\r\n                correct: true\r\n            })\r\n\r\n            setTimeout(this.handleResetAll, 2000)\r\n\r\n        } else {\r\n            this.setState({\r\n                errors: {\r\n                    password: !validation.password,\r\n                    passwordToShort: !validation.passwordToShort,\r\n                    message: !validation.message,\r\n                    messageToShort: !validation.messageToShort,\r\n                    email: !validation.email\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.errors.password || this.state.errors.passwordToShort) {\r\n\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    errors: {\r\n                        password: false,\r\n                        passwordToShort: false\r\n                    }\r\n                })\r\n            }, 2000)\r\n        }\r\n        if (this.state.errors.message || this.state.errors.messageToShort) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    errors: {\r\n                        message: false,\r\n                        messageToShort: false\r\n                    }\r\n                })\r\n            }, 2000)\r\n        }\r\n        if (this.state.errors.email) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    errors: {\r\n                        email: false\r\n                    }\r\n                })\r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let passwordStyle = 'form-control margin text-center'\r\n        let messageStyle = 'form-control margin text-center'\r\n        let emailStyle = 'form-control margin text-center'\r\n        let emailFeedbackStyle = 'invalid-feedback margin2'\r\n\r\n        if (this.state.errors.passwordToShort || this.state.errors.password) {\r\n            passwordStyle = 'form-control margin3 text-center is-invalid'\r\n        } else {\r\n            passwordStyle = 'form-control margin text-center'\r\n        }\r\n        if (this.state.errors.messageToShort || this.state.errors.message) {\r\n            messageStyle = 'form-control margin3 text-center is-invalid'\r\n        } else {\r\n            messageStyle = 'form-control margin text-center'\r\n        }\r\n        if (this.state.errors.email) {\r\n            emailStyle = 'form-control margin3 text-center is-invalid'\r\n        } else {\r\n            emailStyle = 'form-control margin text-center'\r\n        }\r\n        if (this.state.correct) {\r\n            emailFeedbackStyle = 'margin4 sendMessage'\r\n        } else {\r\n            emailFeedbackStyle = 'invalid-feedback margin2'\r\n        }\r\n\r\n        return (\r\n            <form noValidate>\r\n                <div className=\"container\">\r\n                    <div className=\"marginTop\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-2 text-right\">\r\n                                <label htmlFor=\"exampleInputPassword1\" className=\"margin\">Enter the key:</label>\r\n                            </div>\r\n                            <div className=\"col col-md-4\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className={passwordStyle}\r\n                                    id=\"password\"\r\n                                    aria-describedby=\"inputGroupPrepend3\" required\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <div className=\"margin2\">\r\n                                    {this.state.errors.password && <center>{this.messages.password_error2}</center>}\r\n\r\n                                    {this.state.errors.passwordToShort && <center>{this.messages.password_error}</center>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col col-lg-2\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-2 text-right\">\r\n                                <label htmlFor=\"exampleFormControlTextarea1\" className=\"margin\">Message:</label>\r\n                            </div>\r\n                            <div className=\"col col-md-4\">\r\n                                <textarea\r\n                                    className={messageStyle}\r\n                                    id=\"message\" rows=\"5\" aria-describedby=\"inputGroupPrepend3\" required\r\n                                    value={this.state.message}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <div className=\"margin2\">\r\n\r\n                                    {this.state.errors.message && <center>{this.messages.message_error2}</center>}\r\n\r\n                                    {this.state.errors.messageToShort && <center>{this.messages.message_error}</center>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col col-lg-2 margin\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-primary btnBreak2\"\r\n                                    onClick={this.handleCodeMessage}\r\n                                >Encryption</button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-primary btnBreak\"\r\n                                    onClick={this.handleCodeToMessage}\r\n                                >Decryption</button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-primary btnBreak2\"\r\n                                    onClick={this.handleResetAll}\r\n                                >Reset</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-2 text-right\">\r\n                                <label htmlFor=\"exampleInputEmail1\" className=\"margin\">E-mail:</label>\r\n                            </div>\r\n                            <div className=\"col col-md-4\">\r\n                                <input type=\"email\"\r\n                                    className={emailStyle}\r\n                                    id=\"email\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Send a message to your friend\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <div className={emailFeedbackStyle}>\r\n\r\n                                    {this.state.errors.email && <center>{this.messages.email_error}</center>}\r\n\r\n                                    {this.state.correct && <center>{this.messages.message_send}</center>}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col col-lg-2 margin mobile\">\r\n                                <button className=\"btn btn-outline-primary btnBreak3\" type=\"submit\" onClick={this.handleSendMessage}>Send</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer correct={this.state.correct} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Coding;","import React, { Component } from 'react';\r\nimport \"../styles/normalize.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../styles/App.css';\r\nimport Header from './Header';\r\nimport Coding from './Coding';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Coding />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}