{"version":3,"sources":["components/Header.js","components/Footer.js","components/Coding.js","components/App.js","serviceWorker.js","index.js","img/logo.png"],"names":["Header","react_default","a","createElement","className","src","logo","alt","width","height","Footer","props","footerStyle","correct","id","href","Coding","state","password","message","email","checkbox","encryptionClicked","decryptionClicked","passwordValidation","messageValidation","codingValidation","emailValidation","allValidation","showValidationErrors","errorPasswordTooShort","errorPasswordTooLong","errorMessageTooShort","errorMessageTooLong","errorMessageNotCoded","errorEmailIsInvalid","errorcheckbox","showMessageWasSent","messages","messageSend","handleChange","event","target","value","_this","setState","Object","defineProperty","handleEncryption","_this$state","codeMessage","handleEncryptionClickStatus","handleDecryption","_this$state2","key","length","handleDecryptionClickStatus","codeToMessage","noCodeMessage","output","i","c","match","code","charCodeAt","String","fromCharCode","handleReset","handleSend","_this$state3","preventDefault","toSend","send_to","send","then","response","console","log","status","text","catch","err","setTimeout","handleCheckbox","_this$state4","toUpperCase","replace","imput","_this$state5","indexOf","checkboxValidation","_this$state6","prevProps","prevState","_this2","this","_this$state7","_this3","_this$state8","passwordStyle","messageStyle","emailStyle","emailFeedbackStyle","encryptionButton","type","disabled","onClick","decryptionButton","resetButton","passwordErrorTooShort","passwordErrorTooLong","messageErrorTooShort","messageErrorTooLong","messageErrorNotCoded","emailIsInvalid","checkboxError","noValidate","htmlFor","aria-describedby","required","onChange","rows","placeholder","checked","components_Footer","Component","App","Fragment","components_Header","components_Coding","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.079d32e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport logo from \"../img/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"py-5 text-center\">\r\n      <img\r\n        className=\"d-block mx-auto mb-3\"\r\n        src={logo}\r\n        alt=\"project logo\"\r\n        width=\"72\"\r\n        height=\"72\"\r\n      />\r\n      <h1>Message encryption</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = (props) => {\r\n  let footerStyle = \"\";\r\n\r\n  if (props.correct) {\r\n    footerStyle = \"mb-1 marginFooter2\";\r\n  } else {\r\n    footerStyle = \"mb-1 marginFooter\";\r\n  }\r\n\r\n  return (\r\n    <footer className=\"mt-5 pt-3 text-muted text-center text-small\">\r\n      <p className={footerStyle}>©2019 The BestCode Corp.</p>\r\n      <nav id=\"footer-navigation\">\r\n        <ul className=\"list-inline\">\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#\">Privacy</a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#\">Terms</a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#\">Support</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { send } from \"emailjs-com\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass Coding extends Component {\r\n  state = {\r\n    password: \"\",\r\n    message: \"\",\r\n    email: \"\",\r\n    checkbox: false,\r\n\r\n    encryptionClicked: false,\r\n    decryptionClicked: false,\r\n\r\n    passwordValidation: false,\r\n    messageValidation: false,\r\n    codingValidation: false,\r\n    emailValidation: false,\r\n    allValidation: false,\r\n\r\n    showValidationErrors: false,\r\n\r\n    errorPasswordTooShort: true,\r\n    errorPasswordTooLong: false,\r\n    errorMessageTooShort: true,\r\n    errorMessageTooLong: false,\r\n    errorMessageNotCoded: true,\r\n    errorEmailIsInvalid: false,\r\n    errorcheckbox: false,\r\n    showMessageWasSent: false,\r\n  };\r\n\r\n  messages = {\r\n    errorPasswordTooShort: \"The key is too short\",\r\n    errorPasswordTooLong: \"The key is too long\",\r\n    errorMessageTooShort: \"The text is too short\",\r\n    errorMessageTooLong: \"The text is too long\",\r\n    errorMessageNotCoded: \"The message was not coded\",\r\n    errorEmailIsInvalid: \"Check if the mail is correct\",\r\n    errorcheckbox: \"Please confirm\",\r\n    messageSend: \"Success! Message was sent\",\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let {\r\n      encryptionClicked,\r\n      password,\r\n      message,\r\n      email,\r\n      checkbox,\r\n      showValidationErrors,\r\n      passwordValidation,\r\n      messageValidation,\r\n      codingValidation,\r\n      emailValidation,\r\n      showMessageWasSent,\r\n    } = this.state;\r\n\r\n    if (prevState.password !== password) {\r\n      this.passwordValidation();\r\n    }\r\n    if (prevState.message !== message) {\r\n      this.messageValidation();\r\n    }\r\n    if (prevState.encryptionClicked !== encryptionClicked) {\r\n      this.codingValidation();\r\n    }\r\n    if (prevState.email !== email) {\r\n      this.emailValidation();\r\n      this.checkboxValidation();\r\n    }\r\n    if (prevState.checkbox !== checkbox) {\r\n      this.checkboxValidation();\r\n    }\r\n    if (\r\n      prevState.passwordValidation !== passwordValidation ||\r\n      prevState.messageValidation !== messageValidation ||\r\n      prevState.codingValidation !== codingValidation ||\r\n      prevState.emailValidation !== emailValidation ||\r\n      prevState.checkbox !== checkbox\r\n    ) {\r\n      this.allValidation();\r\n    }\r\n\r\n    if (showValidationErrors || showMessageWasSent) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showValidationErrors: false,\r\n          showMessageWasSent: false,\r\n        });\r\n      }, 4000);\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const id = event.target.id;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [id]: value,\r\n    });\r\n  };\r\n\r\n  handleEncryption = () => {\r\n    let { passwordValidation, messageValidation } = this.state;\r\n\r\n    if (passwordValidation && messageValidation) {\r\n      this.codeMessage();\r\n      this.handleEncryptionClickStatus();\r\n    }\r\n  };\r\n\r\n  handleDecryption = () => {\r\n    let { message, password } = this.state;\r\n    let key = password.length - password.length * 2;\r\n\r\n    this.handleDecryptionClickStatus();\r\n\r\n    const noCodeMessage = (message, key) => {\r\n      if (key < 0) return noCodeMessage(message, key + 26);\r\n      let output = \"\";\r\n      for (let i = 0; i < message.length; i++) {\r\n        let c = message[i];\r\n        if (c.match(/[A-Z]/)) {\r\n          let code = message.charCodeAt(i);\r\n          if (code >= 65 && code <= 90)\r\n            c = String.fromCharCode(((code - 65 + key) % 26) + 65);\r\n          else if (code >= 97 && code <= 122)\r\n            c = String.fromCharCode(((code - 97 + key) % 26) + 97);\r\n        }\r\n        output += c;\r\n      }\r\n      return output;\r\n    };\r\n\r\n    let codeToMessage = noCodeMessage(message, key);\r\n\r\n    this.setState({\r\n      message: codeToMessage,\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      password: \"\",\r\n      message: \"\",\r\n      email: \"\",\r\n      checkbox: false,\r\n      encryptionClicked: false,\r\n      decryptionClicked: false,\r\n      passwordValidation: false,\r\n      messageValidation: false,\r\n      codingValidation: false,\r\n      emailValidation: false,\r\n      allValidation: false,\r\n      showValidationErrors: false,\r\n      errorPasswordTooShort: true,\r\n      errorPasswordTooLong: false,\r\n      errorMessageTooShort: true,\r\n      errorMessageTooLong: false,\r\n      errorMessageNotCoded: true,\r\n      errorEmailIsInvalid: false,\r\n      errorcheckbox: false,\r\n      showMessageWasSent: false,\r\n    });\r\n  };\r\n\r\n  handleSend = (event) => {\r\n    let { allValidation, message, email } = this.state;\r\n    event.preventDefault();\r\n    // this.showValidationErrors();\r\n\r\n    let toSend = {\r\n      message: message,\r\n      send_to: email,\r\n    };\r\n\r\n    const ServiceID = \"service_messagecoding\";\r\n    const TemplateID = \"template_50l63q9\";\r\n    const UserID = \"user_ODU8rLD61NH0RQu6lmxOx\";\r\n\r\n    if (allValidation) {\r\n      this.setState({\r\n        showMessageWasSent: true,\r\n      });\r\n\r\n      send(ServiceID, TemplateID, toSend, UserID)\r\n        .then((response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"FAILED...\", err);\r\n        });\r\n      setTimeout(this.handleReset, 4000);\r\n    } else {\r\n      this.showValidationErrors();\r\n    }\r\n  };\r\n\r\n  handleEncryptionClickStatus = () => {\r\n    this.setState({\r\n      encryptionClicked: true,\r\n      decryptionClicked: false,\r\n    });\r\n  };\r\n\r\n  handleDecryptionClickStatus = () => {\r\n    this.setState({\r\n      encryptionClicked: false,\r\n      decryptionClicked: true,\r\n    });\r\n  };\r\n\r\n  handleCheckbox = () => {\r\n    let { checkbox } = this.state;\r\n\r\n    if (checkbox) {\r\n      this.setState({\r\n        checkbox: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        checkbox: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  codeMessage = () => {\r\n    let { message, password } = this.state;\r\n    let key = password.length;\r\n\r\n    let newMessage = message\r\n      .toUpperCase()\r\n      .replace(/Ą/g, \"A\")\r\n      .replace(/Ć/g, \"C\")\r\n      .replace(/Ę/g, \"E\")\r\n      .replace(/Ł/g, \"L\")\r\n      .replace(/Ń/g, \"N\")\r\n      .replace(/Ó/g, \"O\")\r\n      .replace(/Ś/g, \"S\")\r\n      .replace(/Ż/g, \"Z\")\r\n      .replace(/Ź/g, \"Z\");\r\n\r\n    let codeMessage = newMessage.replace(/[A-Z]/g, (imput) =>\r\n      String.fromCharCode(((imput.charCodeAt(0) - 65 + key) % 26) + 65)\r\n    );\r\n\r\n    this.setState({\r\n      message: codeMessage,\r\n    });\r\n  };\r\n\r\n  passwordValidation = () => {\r\n    let { password } = this.state;\r\n    let errorPasswordTooShort = false;\r\n    let errorPasswordTooLong = false;\r\n\r\n    if (password.length < 4) {\r\n      errorPasswordTooShort = true;\r\n    }\r\n    if (password.length >= 25) {\r\n      errorPasswordTooLong = true;\r\n    }\r\n\r\n    this.setState({\r\n      errorPasswordTooShort,\r\n      errorPasswordTooLong,\r\n    });\r\n\r\n    if (!errorPasswordTooShort && !errorPasswordTooLong) {\r\n      this.setState({\r\n        passwordValidation: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        passwordValidation: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  messageValidation = () => {\r\n    let { message } = this.state;\r\n    let errorMessageTooShort = false;\r\n    let errorMessageTooLong = false;\r\n\r\n    if (message.length > 51) {\r\n      errorMessageTooLong = true;\r\n    }\r\n    if (message.length < 4) {\r\n      errorMessageTooShort = true;\r\n    }\r\n\r\n    this.setState({\r\n      errorMessageTooShort,\r\n      errorMessageTooLong,\r\n    });\r\n\r\n    if (!errorMessageTooShort && !errorMessageTooLong) {\r\n      this.setState({\r\n        messageValidation: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        messageValidation: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  codingValidation = () => {\r\n    let { encryptionClicked, decryptionClicked } = this.state;\r\n\r\n    if (encryptionClicked && !decryptionClicked) {\r\n      this.setState({\r\n        codingValidation: true,\r\n        errorMessageNotCoded: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        codingValidation: false,\r\n        errorMessageNotCoded: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  emailValidation = () => {\r\n    let { email } = this.state;\r\n\r\n    if (\r\n      email.length > 6 &&\r\n      email.indexOf(\"@\") !== -1 &&\r\n      email.indexOf(\".\") !== -1\r\n    ) {\r\n      this.setState({\r\n        emailValidation: true,\r\n        errorEmailIsInvalid: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        emailValidation: false,\r\n        errorEmailIsInvalid: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  checkboxValidation = () => {\r\n    let { checkbox } = this.state;\r\n\r\n    if (!checkbox) {\r\n      this.setState({\r\n        errorcheckbox: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorcheckbox: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  showValidationErrors = () => {\r\n    this.setState({\r\n      showValidationErrors: true,\r\n    });\r\n  };\r\n\r\n  allValidation = () => {\r\n    let {\r\n      checkbox,\r\n      passwordValidation,\r\n      messageValidation,\r\n      codingValidation,\r\n      emailValidation,\r\n    } = this.state;\r\n\r\n    if (\r\n      checkbox &&\r\n      passwordValidation &&\r\n      messageValidation &&\r\n      codingValidation &&\r\n      emailValidation\r\n    ) {\r\n      this.setState({\r\n        allValidation: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        allValidation: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      errorPasswordTooShort,\r\n      errorPasswordTooLong,\r\n      errorMessageTooShort,\r\n      errorMessageTooLong,\r\n      errorMessageNotCoded,\r\n      errorEmailIsInvalid,\r\n      errorcheckbox,\r\n      encryptionClicked,\r\n      checkbox,\r\n      password,\r\n      message,\r\n      email,\r\n      showValidationErrors,\r\n      allValidation,\r\n      showMessageWasSent,\r\n    } = this.state;\r\n\r\n    let passwordStyle = \"form-control margin text-center\";\r\n    let messageStyle = \"form-control margin text-center\";\r\n    let emailStyle = \"form-control margin text-center\";\r\n    let emailFeedbackStyle = \"invalid-feedback margin2\";\r\n\r\n    let encryptionButton = encryptionClicked ? (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-primary btnBreak2\"\r\n        disabled\r\n      >\r\n        Encryption\r\n      </button>\r\n    ) : (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-primary btnBreak2\"\r\n        onClick={() => {\r\n          this.handleEncryption();\r\n          this.showValidationErrors();\r\n        }}\r\n      >\r\n        Encryption\r\n      </button>\r\n    );\r\n\r\n    let decryptionButton = encryptionClicked ? (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-primary btnBreak\"\r\n        onClick={this.handleDecryption}\r\n      >\r\n        Decryption\r\n      </button>\r\n    ) : (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-primary btnBreak\"\r\n        disabled\r\n      >\r\n        Decryption\r\n      </button>\r\n    );\r\n\r\n    let resetButton =\r\n      password !== \"\" || message !== \"\" || email !== \"\" ? (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary btnBreak2\"\r\n          onClick={this.handleReset}\r\n        >\r\n          Reset\r\n        </button>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary btnBreak2\"\r\n          disabled\r\n        >\r\n          Reset\r\n        </button>\r\n      );\r\n\r\n    if (\r\n      (showValidationErrors && errorPasswordTooShort) ||\r\n      (showValidationErrors && errorPasswordTooLong)\r\n    ) {\r\n      passwordStyle = \"form-control margin3 text-center is-invalid\";\r\n    } else {\r\n      passwordStyle = \"form-control margin text-center\";\r\n    }\r\n    if (\r\n      (showValidationErrors && errorMessageTooShort) ||\r\n      (showValidationErrors && errorMessageTooLong) ||\r\n      (showValidationErrors && errorMessageNotCoded)\r\n    ) {\r\n      messageStyle = \"form-control margin3 text-center is-invalid\";\r\n    } else {\r\n      messageStyle = \"form-control margin text-center\";\r\n    }\r\n    if (showValidationErrors && errorEmailIsInvalid) {\r\n      emailStyle = \"form-control margin3 text-center is-invalid\";\r\n    } else {\r\n      emailStyle = \"form-control margin text-center\";\r\n    }\r\n    if (showMessageWasSent) {\r\n      emailFeedbackStyle = \"margin4 sendMessage\";\r\n    } else {\r\n      emailFeedbackStyle = \"invalid-feedback margin2\";\r\n    }\r\n\r\n    let passwordErrorTooShort = showValidationErrors &&\r\n      errorPasswordTooShort && (\r\n        <center>{this.messages.errorPasswordTooShort}</center>\r\n      );\r\n    let passwordErrorTooLong = showValidationErrors && errorPasswordTooLong && (\r\n      <center>{this.messages.errorPasswordTooLong}</center>\r\n    );\r\n\r\n    let messageErrorTooShort = showValidationErrors && errorMessageTooShort && (\r\n      <center>{this.messages.errorMessageTooShort}</center>\r\n    );\r\n    let messageErrorTooLong = showValidationErrors && errorMessageTooLong && (\r\n      <center>{this.messages.errorMessageTooLong}</center>\r\n    );\r\n    let messageErrorNotCoded = showValidationErrors && errorMessageNotCoded && (\r\n      <center>{this.messages.errorMessageNotCoded}</center>\r\n    );\r\n    let emailIsInvalid = showValidationErrors && errorEmailIsInvalid && (\r\n      <center>{this.messages.errorEmailIsInvalid}</center>\r\n    );\r\n    let checkboxError = showValidationErrors && errorcheckbox && (\r\n      <center>{this.messages.errorcheckbox}</center>\r\n    );\r\n\r\n    let messageSend = showMessageWasSent && allValidation && (\r\n      <center>{this.messages.messageSend}</center>\r\n    );\r\n\r\n    return (\r\n      <form noValidate>\r\n        <div className=\"container\">\r\n          <main className=\"marginTop\">\r\n            <div className=\"row\">\r\n              <section className=\"col col-lg-2 text-right\">\r\n                <label htmlFor=\"exampleInputPassword1\" className=\"margin\">\r\n                  Enter the key:\r\n                </label>\r\n              </section>\r\n              <section className=\"col col-md-4\">\r\n                <input\r\n                  type=\"password\"\r\n                  className={passwordStyle}\r\n                  id=\"password\"\r\n                  aria-describedby=\"inputGroupPrepend3\"\r\n                  required\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div className=\"margin2\">\r\n                  {passwordErrorTooShort}\r\n                  {passwordErrorTooLong}\r\n                </div>\r\n              </section>\r\n              <div className=\"col col-lg-2\"></div>\r\n            </div>\r\n\r\n            <section className=\"row\">\r\n              <div className=\"col col-lg-2 text-right\">\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"margin\">\r\n                  Message:\r\n                </label>\r\n              </div>\r\n              <div className=\"col col-md-4\">\r\n                <textarea\r\n                  className={messageStyle}\r\n                  id=\"message\"\r\n                  rows=\"5\"\r\n                  aria-describedby=\"inputGroupPrepend3\"\r\n                  required\r\n                  value={this.state.message}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div className=\"margin2\">\r\n                  {messageErrorTooShort}\r\n                  {messageErrorTooLong}\r\n                  {messageErrorNotCoded}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col col-lg-2 margin\">\r\n                {encryptionButton}\r\n                {decryptionButton}\r\n                {resetButton}\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"row\">\r\n              <div className=\"col col-lg-2 text-right\">\r\n                <label htmlFor=\"exampleInputEmail1\" className=\"margin\">\r\n                  E-mail:\r\n                </label>\r\n              </div>\r\n              <div className=\"col col-md-4\">\r\n                <input\r\n                  type=\"email\"\r\n                  className={emailStyle}\r\n                  id=\"email\"\r\n                  required\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Send a message to your friend\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div className={emailFeedbackStyle}>{emailIsInvalid}</div>\r\n\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id=\"checkbox\"\r\n                    required\r\n                    onChange={this.handleCheckbox}\r\n                    checked={checkbox}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"checkbox\">\r\n                    I'm not a robot\r\n                  </label>\r\n                </div>\r\n                <div className={emailFeedbackStyle}>{messageSend}</div>\r\n                <div className=\"margin2 margin4\">{checkboxError}</div>\r\n              </div>\r\n\r\n              <div className=\"col col-lg-2 margin mobile\">\r\n                <button\r\n                  className=\"btn btn-outline-primary btnBreak3\"\r\n                  type=\"submit\"\r\n                  value=\"Send\"\r\n                  onClick={this.handleSend}\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </section>\r\n          </main>\r\n        </div>\r\n        <Footer correct={showMessageWasSent || (errorcheckbox && showValidationErrors)} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Coding;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/normalize.sass\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../styles/style.sass\";\r\nimport Header from \"./Header\";\r\nimport Coding from \"./Coding\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Coding />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.acd54ad6.png\";"],"sourceRoot":""}