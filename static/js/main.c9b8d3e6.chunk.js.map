{"version":3,"sources":["components/Header.js","components/Footer.js","components/Coding.js","components/App.js","serviceWorker.js","index.js","components/img/logo.png"],"names":["Header","react_default","a","createElement","className","src","logo","alt","width","height","Footer","props","footerStyle","correct","href","Coding","state","password","message","email","errors","passwordToShort","messageToShort","messages","password_error","password_error2","message_error","message_error2","email_error","message_send","handleChange","event","id","target","value","_this","setState","Object","defineProperty","handleResetAll","messageSend","messageToCode","key","length","codeMessage","toUpperCase","replace","imput","String","fromCharCode","charCodeAt","handleCodeToMessage","codeToMessage","noCodeMessage","output","i","c","match","code","CodeValidation","handleCodeMessage","validation","SendValidation","indexOf","handleSendMessage","preventDefault","setTimeout","_this2","this","passwordStyle","messageStyle","emailStyle","emailFeedbackStyle","noValidate","htmlFor","type","aria-describedby","required","onChange","rows","onClick","placeholder","components_Footer","Component","App","Fragment","components_Header","components_Coding","Boolean","window","location","hostname","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c9b8d3e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from './img/logo.png'\r\n\r\nconst Header = () => {\r\n    return (\r\n\r\n        <div className=\"py-5 text-center\">\r\n            <img className=\"d-block mx-auto mb-3\" src={logo} alt=\"logo\" width=\"72\" height=\"72\" />\r\n            <h2>Message encryption</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\n\r\nconst Footer = props => {\r\n\r\n    let footerStyle = ''\r\n\r\n    if (props.correct) {\r\n        footerStyle = 'mb-1 marginFooter2'\r\n    } else {\r\n        footerStyle = 'mb-1 marginFooter'\r\n    }\r\n\r\n    return (\r\n        <footer className='my-5 pt-5 text-muted text-center text-small'>\r\n            <p className={footerStyle} >Â©2019 TheBestCode Corp.</p>\r\n            <ul className=\"list-inline\">\r\n                <li className=\"list-inline-item\"><a href=\"#\">Privacy</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"#\">Terms</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"#\">Support</a></li>\r\n            </ul>\r\n        </footer>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\r\nimport Footer from './Footer'\r\n\r\nclass Coding extends Component {\r\n\r\n    state = {\r\n        password: '',\r\n        message: '',\r\n        email: '',\r\n        correct: false,\r\n\r\n        errors: {\r\n            password: false,\r\n            passwordToShort: false,\r\n            message: false,\r\n            messageToShort: false,\r\n            email: false,\r\n        }\r\n    }\r\n\r\n    messages = {\r\n        password_error: 'The key is too short',\r\n        password_error2: 'The key is too long',\r\n        message_error: 'The text is too short',\r\n        message_error2: 'The text is too long',\r\n        email_error: 'Check if the mail is correct',\r\n        message_send: 'Success! Message was sent'\r\n    }\r\n\r\n    handleChange = event => {\r\n\r\n        const id = event.target.id\r\n        const value = event.target.value\r\n\r\n        this.setState({\r\n            [id]: value\r\n        })\r\n    }\r\n\r\n    handleResetAll = () => {\r\n        this.setState({\r\n            password: '',\r\n            message: '',\r\n            email: '',\r\n            correct: false,\r\n            messageSend: '',\r\n\r\n            errors: {\r\n                password: false,\r\n                passwordToShort: false,\r\n                message: false,\r\n                messageToShort: false,\r\n                email: false\r\n            }\r\n        })\r\n    }\r\n\r\n    messageToCode = () => {\r\n        let key = this.state.password.length\r\n        let message = this.state.message\r\n\r\n        let newMessage = message.toUpperCase().replace(/Ä/g, 'A').replace(/Ä/g, 'C').replace(/Ä/g, 'E').replace(/Å/g, 'L').replace(/Å/g, 'N').replace(/Ã/g, 'O').replace(/Å/g, 'S').replace(/Å»/g, 'Z').replace(/Å¹/g, 'Z')\r\n\r\n        let codeMessage = newMessage.replace(/[A-Z]/g, imput => String.fromCharCode((imput.charCodeAt(0) - 65 + key) % 26 + 65));\r\n\r\n        this.setState({\r\n            message: codeMessage\r\n        })\r\n    }\r\n\r\n    handleCodeToMessage = () => {\r\n        let key = this.state.password.length - (this.state.password.length * 2)\r\n        let message = this.state.message\r\n\r\n        const noCodeMessage = (message, key) => {\r\n            if (key < 0)\r\n                return noCodeMessage(message, key + 26);\r\n            let output = '';\r\n            for (let i = 0; i < message.length; i++) {\r\n                let c = message[i];\r\n                if (c.match(/[A-Z]/)) {\r\n                    let code = message.charCodeAt(i);\r\n                    if ((code >= 65) && (code <= 90))\r\n                        c = String.fromCharCode(((code - 65 + key) % 26) + 65);\r\n                    else if ((code >= 97) && (code <= 122))\r\n                        c = String.fromCharCode(((code - 97 + key) % 26) + 97);\r\n                }\r\n                output += c\r\n            }\r\n            return output;\r\n        };\r\n\r\n        let codeToMessage = noCodeMessage(message, key)\r\n\r\n        this.setState({\r\n            message: codeToMessage\r\n        })\r\n\r\n    }\r\n\r\n    CodeValidation = () => {\r\n\r\n        let password = false\r\n        let passwordToShort = false\r\n        let message = false\r\n        let messageToShort = false\r\n        let correct = false\r\n\r\n        if (this.state.password.length > 4) {\r\n            passwordToShort = true;\r\n        }\r\n        if (this.state.password.length <= 25) {\r\n            password = true;\r\n        }\r\n        if (this.state.message.length < 51) {\r\n            message = true\r\n        }\r\n        if (this.state.message.length > 4) {\r\n            messageToShort = true\r\n        }\r\n        if (password && passwordToShort && message && messageToShort) {\r\n            correct = true\r\n        }\r\n\r\n        return ({\r\n            password,\r\n            passwordToShort,\r\n            message,\r\n            messageToShort,\r\n            correct\r\n        })\r\n\r\n    }\r\n\r\n    handleCodeMessage = () => {\r\n\r\n        const validation = this.CodeValidation()\r\n\r\n        if (validation.correct) {\r\n\r\n            this.messageToCode()\r\n\r\n        } else {\r\n\r\n            this.setState({\r\n                errors: {\r\n                    password: !validation.password,\r\n                    passwordToShort: !validation.passwordToShort,\r\n                    message: !validation.message,\r\n                    messageToShort: !validation.messageToShort\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    SendValidation = () => {\r\n        let password = false\r\n        let passwordToShort = false\r\n        let message = false\r\n        let messageToShort = false\r\n        let email = false\r\n        let correct = false\r\n\r\n        if (this.state.password.length > 4) {\r\n            passwordToShort = true;\r\n        }\r\n        if (this.state.password.length <= 25) {\r\n            password = true;\r\n        }\r\n        if (this.state.message.length < 51) {\r\n            message = true\r\n        }\r\n        if (this.state.message.length > 4) {\r\n            messageToShort = true\r\n        }\r\n        if (this.state.email.length > 6 && this.state.email.indexOf('@') !== -1) {\r\n            email = true\r\n        }\r\n        if (password && passwordToShort && message && messageToShort && email) {\r\n            correct = true\r\n        }\r\n\r\n        return ({\r\n            password,\r\n            passwordToShort,\r\n            message,\r\n            messageToShort,\r\n            email,\r\n            correct\r\n        })\r\n    }\r\n\r\n    handleSendMessage = event => {\r\n\r\n        event.preventDefault()\r\n\r\n        const validation = this.SendValidation()\r\n\r\n        if (validation.correct) {\r\n            this.setState({\r\n                correct: true\r\n            })\r\n\r\n            setTimeout(this.handleResetAll, 2000)\r\n\r\n        } else {\r\n            this.setState({\r\n                errors: {\r\n                    password: !validation.password,\r\n                    passwordToShort: !validation.passwordToShort,\r\n                    message: !validation.message,\r\n                    messageToShort: !validation.messageToShort,\r\n                    email: !validation.email\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.errors.password || this.state.errors.passwordToShort) {\r\n\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    errors: {\r\n                        password: false,\r\n                        passwordToShort: false\r\n                    }\r\n                })\r\n            }, 2000)\r\n        }\r\n        if (this.state.errors.message || this.state.errors.messageToShort) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    errors: {\r\n                        message: false,\r\n                        messageToShort: false\r\n                    }\r\n                })\r\n            }, 2000)\r\n        }\r\n        if (this.state.errors.email) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    errors: {\r\n                        email: false\r\n                    }\r\n                })\r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let passwordStyle = 'form-control margin center'\r\n        let messageStyle = 'form-control margin center'\r\n        let emailStyle = 'form-control margin center'\r\n        let emailFeedbackStyle = 'invalid-feedback margin2'\r\n\r\n        if (this.state.errors.passwordToShort || this.state.errors.password) {\r\n            passwordStyle = 'form-control margin3 center is-invalid'\r\n        } else {\r\n            passwordStyle = 'form-control margin center'\r\n        }\r\n        if (this.state.errors.messageToShort || this.state.errors.message) {\r\n            messageStyle = 'form-control margin3 center is-invalid'\r\n        } else {\r\n            messageStyle = 'form-control margin center'\r\n        }\r\n        if (this.state.errors.email) {\r\n            emailStyle = 'form-control margin3 center is-invalid'\r\n        } else {\r\n            emailStyle = 'form-control margin center'\r\n        }\r\n        if (this.state.correct) {\r\n            emailFeedbackStyle = 'margin4 sendMessage'\r\n        } else {\r\n            emailFeedbackStyle = 'invalid-feedback margin2'\r\n        }\r\n\r\n        return (\r\n            <form noValidate>\r\n                <div className=\"container\">\r\n                    <div className=\"marginTop\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-2 right\">\r\n                                <label htmlFor=\"exampleInputPassword1\" className=\"margin\">Enter the key:</label>\r\n                            </div>\r\n                            <div className=\"col col-md-4\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className={passwordStyle}\r\n                                    id=\"password\"\r\n                                    aria-describedby=\"inputGroupPrepend3\" required\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <div className=\"margin2\">\r\n                                    {this.state.errors.password && <center>{this.messages.password_error2}</center>}\r\n\r\n                                    {this.state.errors.passwordToShort && <center>{this.messages.password_error}</center>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col col-lg-2\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-2 right\">\r\n                                <label htmlFor=\"exampleFormControlTextarea1\" className=\"margin\">Message:</label>\r\n                            </div>\r\n                            <div className=\"col col-md-4\">\r\n                                <textarea\r\n                                    className={messageStyle}\r\n                                    id=\"message\" rows=\"5\" aria-describedby=\"inputGroupPrepend3\" required\r\n                                    value={this.state.message}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <div className=\"margin2\">\r\n\r\n                                    {this.state.errors.message && <center>{this.messages.message_error2}</center>}\r\n\r\n                                    {this.state.errors.messageToShort && <center>{this.messages.message_error}</center>}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col col-lg-2 margin\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-primary btnBreak2\"\r\n                                    onClick={this.handleCodeMessage}\r\n                                >Encryption</button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-primary btnBreak\"\r\n                                    onClick={this.handleCodeToMessage}\r\n                                >Decryption</button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-outline-primary btnBreak2\"\r\n                                    onClick={this.handleResetAll}\r\n                                >Reset</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-2 right\">\r\n                                <label htmlFor=\"exampleInputEmail1\" className=\"margin\">E-mail:</label>\r\n                            </div>\r\n                            <div className=\"col col-md-4\">\r\n                                <input type=\"email\"\r\n                                    className={emailStyle}\r\n                                    id=\"email\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Send a message to your friend\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                                <div className={emailFeedbackStyle}>\r\n\r\n                                    {this.state.errors.email && <center>{this.messages.email_error}</center>}\r\n\r\n                                    {this.state.correct && <center>{this.messages.message_send}</center>}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col col-lg-2 margin\">\r\n                                <button className=\"btn btn-outline-primary btnBreak2\" type=\"submit\" onClick={this.handleSendMessage}>Send</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer correct={this.state.correct} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Coding;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Header from './Header';\nimport Coding from './Coding';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <Coding />\n      </>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.acd54ad6.png\";"],"sourceRoot":""}